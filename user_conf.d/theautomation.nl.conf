# Bitwarden
upstream prd-bitwarden {
	server prd-bitwarden-app:80;
}
upstream prd-bitwarden-notifications {
	server prd-bitwarden-app:3012;
}
  
server {
    listen                      443 ssl;
    server_name                 bitwarden.theautomation.nl;
    server_tokens               off;

    #include /etc/letsencrypt/options-ssl-nginx.conf
    ssl_certificate             /etc/letsencrypt/live/theautomation.nl/fullchain.pem;
    ssl_certificate_key         /etc/letsencrypt/live/theautomation.nl/privkey.pem;
    ssl_trusted_certificate     /etc/letsencrypt/live/theautomation.nl/chain.pem;
    ssl_dhparam                 /etc/letsencrypt/dhparams/dhparam.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:DHE+AESGCM:DHE:!RSA!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!CAMELLIA:!SEED";

    location / {
        proxy_pass              http://prd-bitwarden;
        proxy_set_header        Host                $host;
        proxy_set_header        X-Real-IP           $remote_addr;
        proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto   $scheme;
    }

    location /notifications/hub {
        proxy_pass              http://prd-bitwarden-notifications;
        proxy_set_header        Upgrade             $http_upgrade;
        proxy_set_header        Connection          "upgrade";
    }
  
    location /notifications/hub/negotiate {
        proxy_pass              http://prd-bitwarden;
    }
}

# Home Assistant
upstream prd-home-assistant {
	server docker.stam.lan:8123;
}

server {
    listen                      443 ssl;
    server_name                 homeassistant.theautomation.nl;
    server_tokens               off;
    
    ssl_certificate             /etc/letsencrypt/live/theautomation.nl/fullchain.pem;
    ssl_certificate_key         /etc/letsencrypt/live/theautomation.nl/privkey.pem;
    ssl_trusted_certificate     /etc/letsencrypt/live/theautomation.nl/chain.pem;
    ssl_dhparam                 /etc/letsencrypt/dhparams/dhparam.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:DHE+AESGCM:DHE:!RSA!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!CAMELLIA:!SEED";

    location / {
        proxy_pass              http://prd-home-assistant;
        proxy_set_header        Host                $http_host;
        proxy_set_header        X-Real-IP           $remote_addr;
        proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto   $scheme;
        proxy_set_header        X-Forwarded-Host    $server_name;
        proxy_set_header        Upgrade             $http_upgrade;
        proxy_set_header        Connection          "Upgrade";
    }
}

# Drone
upstream prd-drone {
	server prd-drone-server:80;
}

server {
    listen                      443 ssl;
    server_name                 drone.theautomation.nl;
    server_tokens               off;

    ssl_certificate             /etc/letsencrypt/live/theautomation.nl/fullchain.pem;
    ssl_certificate_key         /etc/letsencrypt/live/theautomation.nl/privkey.pem;
    ssl_trusted_certificate     /etc/letsencrypt/live/theautomation.nl/chain.pem;
    ssl_dhparam                 /etc/letsencrypt/dhparams/dhparam.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:DHE+AESGCM:DHE:!RSA!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!CAMELLIA:!SEED";

    location / {
        proxy_pass                  http://prd-drone;
        proxy_set_header            Host                $http_host;
        proxy_set_header            X-Real-IP           $remote_addr;
        proxy_set_header            X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header            X-Forwarded-Proto   $scheme;
        proxy_set_header            X-Forwarded-Host    $server_name;
        proxy_redirect              off;
        proxy_http_version          1.1;
        proxy_buffering             off;
        chunked_transfer_encoding   off;
    }
}

# Docker Registry
upstream docker-registry {
    server prd-docker-registry-app:5000;
}

server {
    listen                      443 ssl;
    server_name                 docker-registry.theautomation.nl;
    server_tokens               off;

    ssl_certificate             /etc/letsencrypt/live/theautomation.nl/fullchain.pem;
    ssl_certificate_key         /etc/letsencrypt/live/theautomation.nl/privkey.pem;
    ssl_trusted_certificate     /etc/letsencrypt/live/theautomation.nl/chain.pem;
    ssl_dhparam                 /etc/letsencrypt/dhparams/dhparam.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:DHE+AESGCM:DHE:!RSA!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!CAMELLIA:!SEED";


    location / {
        if ($http_user_agent ~ "^(docker/1.(3|4|5(?!.[0-9]-dev))|Go ).*$" )  {
            return 404;
        }
        proxy_pass               http://docker-registry;
        proxy_set_header         Host              $http_host;
        proxy_set_header         X-Real-IP         $remote_addr;
        proxy_set_header         X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header         X-Forwarded-Proto $scheme;
        proxy_read_timeout       900;
        client_max_body_size     0;
    }
}