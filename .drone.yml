---
kind: pipeline
name: validate

steps:
  - name: yamllint
    image: sdesbure/yamllint:latest
    commands:
      - yamllint -c ./.yamllint .

  - name: docker-compose
    image: tmaier/docker-compose:latest
    commands:
      - mv prd-nginx-certbot-app.env.example prd-nginx-certbot-app.env
      - docker-compose config -q

---
kind: pipeline
type: docker
name: test

steps:
  - name: check config
    image: jonasal/nginx-certbot:latest
    pull: always
    volumes:
      - name: certs
        path: /etc/letsencrypt/live/
    commands:
      - cp -a ./conf.d/. /etc/nginx/conf.d/
      - cd /etc/letsencrypt/live/
      - ls
      # - mkdir -p /etc/letsencrypt/live/theautomation.nl/
      # - openssl req -x509 -sha256 -nodes -newkey rsa:2048 -days 365 -subj "/C=US/ST=Oregon/L=Portland/O=Company Name/OU=Org/CN=localhost" -keyout /etc/letsencrypt/live/theautomation.nl/privkey.pem -out /etc/letsencrypt/live/theautomation.nl/fullchain.pem
      - nginx -c /etc/nginx/conf.d/public.bitwarden.conf -t

volumes:
  - name: certs
    host:
      path: /home/coen/docker-home-services/nginx-certbot/nginx_secrets/live

---
kind: pipeline
type: docker
name: build

depends_on:
  - validate

steps:
  - name: publish
    image: plugins/docker
    settings:
      username:
        from_secret: docker-registry-username
      password:
        from_secret: docker-registry-password
      registry: docker-registry.theautomation.nl
      repo: docker-registry.theautomation.nl/coen/prd-${DRONE_REPO_NAME}-app
      auto_tag: true

---
kind: pipeline
type: docker
name: upgrade

depends_on:
  - build

steps:
  - name: upgrade
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - cd /home/coen/docker-home-services/${DRONE_REPO_NAME}/
        - git pull
        - docker-compose pull

  - name: deploy
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - cd /home/coen/docker-home-services/${DRONE_REPO_NAME}/
        - docker-compose up -d

  - name: clean
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - cd /home/coen/docker-home-services/${DRONE_REPO_NAME}/
        - docker image prune -f
