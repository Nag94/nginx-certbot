# Jellyfin
upstream prd-jellyfin-app {
	server docker.stam.lan:8096;
}

server {
    listen                      443 ssl;
    server_name                 jellyfin.theautomation.nl;
    server_tokens               off;
    
    ssl_certificate             /etc/letsencrypt/live/jellyfin.theautomation.nl/fullchain.pem;
    ssl_certificate_key         /etc/letsencrypt/live/jellyfin.theautomation.nl/privkey.pem;
    ssl_trusted_certificate     /etc/letsencrypt/live/jellyfin.theautomation.nl/chain.pem;
    ssl_dhparam                 /etc/letsencrypt/dhparams/dhparam.pem;
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:DHE+AESGCM:DHE:!RSA!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!CAMELLIA:!SEED";

    location / {
        # Proxy main Jellyfin traffic
        proxy_pass              http://prd-jellyfin-app;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Forwarded-Protocol $scheme;
        proxy_set_header        X-Forwarded-Host $http_host;
        # Disable buffering when the nginx proxy gets very resource heavy upon streaming
        proxy_buffering         off;
    }

    # location block for /web - This is purely for aesthetics so /web/#!/ works instead of having to go to /web/index.html/#!/
    location = /web/ {
        # Proxy main Jellyfin traffic
        proxy_pass              http://prd-jellyfin-app/web/index.html;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Forwarded-Protocol $scheme;
        proxy_set_header        X-Forwarded-Host $http_host;
    }

    location /socket {
        # Proxy Jellyfin Websockets traffic
        proxy_pass              http://prd-jellyfin-app;
        proxy_http_version      1.1;
        proxy_set_header        Upgrade $http_upgrade;
        proxy_set_header        Connection "upgrade";
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Forwarded-Protocol $scheme;
        proxy_set_header        X-Forwarded-Host $http_host;
    }
}